{"version":3,"file":"0.4a6748d5bef620bf1664.hot-update.js","sources":["webpack:///./src/components/MapNavigation/MapNavigation.js"],"sourcesContent":["import React, { Component, useState } from \"react\"\nimport styled from \"styled-components\"\nimport ImageMapper from \"react-image-mapper\"\nimport { unescapeWithRegexp } from \"../../utils/escape\"\n\nconst AreaTag = styled.span`\n  position: absolute;\n  color: #fff;\n  padding: 10px;\n  background: rgba(0, 0, 0, 0.8);\n  transform: translate3d(-50%, -50%, 0);\n  border-radius: 5px;\n  pointer-events: none;\n  z-index: 1000;\n`\n\nexport default class MapNavigation extends Component {\n  constructor(props) {\n    super(props)\n  }\n\n  state = {\n    areaCoords: null,\n  }\n\n  componentDidMount() {\n    if (this.mapper && this.mapper.computeCenter) {\n      const areaCoords = JSON.parse(\n        unescapeWithRegexp(this.props.map)\n      ).areas.reduce((accum, area) => {\n        area.coords = JSON.parse(area.coords)\n        accum[area.name] = this.mapper.computeCenter(area)\n        return accum\n      }, {})\n      this.setState({ areaCoords })\n    }\n  }\n\n  render() {\n    const { imageSrc, map: mapString, alt } = this.props\n    var map = \"\"\n    try {\n      map = JSON.parse(unescapeWithRegexp(mapString))\n    } catch (ex) {}\n\n    if (map && Array.isArray(map.areas)) {\n      map.areas.forEach(area => {\n        area.coords = JSON.parse(area.coords)\n      })\n    } else {\n      map.areas = []\n    }\n\n    return (\n      <div style={{ position: \"relative\" }}>\n        {imageSrc && (\n          <ImageMapper\n            ref={mapper => (this.mapper = mapper)}\n            src={imageSrc}\n            map={map}\n            alt={alt}\n            key=\"mapper\"\n          />\n        )}\n        {this.mapper &&\n          this.state.areaCoords &&\n          map.areas.map(area => {\n            const coords = this.state.areaCoords[area.name]\n            return (\n              <AreaTag\n                key={area.name}\n                style={{ top: `${coords[1]}px`, left: `${coords[0]}px` }}\n              >\n                {area.name}\n              </AreaTag>\n            )\n          })}\n      </div>\n    )\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAUA;;;;;AACA;AAAA;AACA;AAAA;AADA;AAKA;AADA;AAJA;AAEA;AACA;;;AAKA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAGA;AACA;;;;;;;;AAhEA;AACA;AADA;;;;;;;;;;AAXA;AAWA;;;;;;;;;;;;;A","sourceRoot":""}