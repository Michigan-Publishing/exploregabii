{"version":3,"sources":["webpack:///./src/components/contentArea/ContentArea.js","webpack:///./src/templates/content-pages.js","webpack:///./.cache/gatsby-mdx/mdx-wrappers-dir/f295b1decd1d0de173c6bf399815be99--scope-hash-3010b3badc54a9dfa4a4c80e419a41b2.js"],"names":["ContentWrapper","styled","main","withConfig","displayName","componentId","palette","rgbContentBackground","white","constants","render","_this$props","this","props","children","style","react_default","a","createElement","React","Component","shouldShowRelatedContent","data","shouldShowChildLinks","mapSiblingContent","siblingPages","edges","map","_ref","node","href","slug","title","getBodyContent","items","ContentPages","_this","_Component","call","state","headerOffset","componentDidMount","document","setState","siteContainer","headingWrapper","clientHeight","_this2","pageContext","contextComponents","FulcrumImageVideo","fulcrum","FulcrumTextAudio","AboutTheAuthor","aboutTheAuthor","MapNavigation","newScope","objectSpread_default","scope","newProps","useMarkdownInsteadOfMDX","window","MSInputMethodContext","documentMode","ex","isIE11","breakpoints","Object","assign","ref","Helmet","charSet","visuallyHidden","hasContent","ContentArea_default","markdown","mdx_renderer","body","point","points","afterPoints","relatedContent","relatedLinks","secondaryNavigation","linkProperties","edge","withMDXScope","content_pages_ContentPages","pageQuery","__webpack_exports__","objectWithoutPropertiesLoose_default","context","__mdxScope","_3010b3badc54a9dfa4a4c80e419a41b2","content_pages"],"mappings":"oPAKMA,EAAiBC,UAAHC,KAAAC,WAAA,CAAAC,YAAA,8BAAAC,YAAA,YAAGJ,CAAH,sVACOK,IADPC,qBAEaD,IAFbC,qBAGTD,IAHSE,MAApBC,EAAA,+FA8BEC,kBAAS,IAAAC,EACqBC,KADrBC,MACCC,EADDH,EAAAG,SACWC,EADXJ,EAAAI,MAEP,OAAOC,EAAAC,EAAAC,cAAAlB,EAAA,CAAgBe,MAAOA,GAA9BD,OAHyBK,IAAMC,8GCCnC,SAAAC,EAAAC,GACE,OACEA,GACAA,EADAA,cAEAA,eAFAA,OAGAA,4BAHAA,IADF,IAKEC,KAIJ,SAAAC,EAAAF,GACE,OAAKD,EAALC,GAIOA,EAAAG,aAAAC,MAAAC,IAA4B,SAAAC,GAAA,IAAGC,EAAHD,EAAAC,KAAA,MAAe,CAChDC,KAAMD,SAD0CE,KAEhDC,MAAOH,cAAiBG,SALxB,KASJ,SAAAT,EAAAD,GACE,SAAUA,cAAmBA,0BAA7B,GAWF,SAAAW,EAAAX,GACE,IAAMY,EAAQZ,qBAAd,OAEA,OAAOY,WAAmBA,EAAMA,SAAzBA,GAAP,OAOIC,cACJ,SAAAA,EAAAtB,GAAmB,IAAAuB,EAAA,OACjBA,EAAAC,EAAAC,KAAA1B,KAAAC,IAAAD,MACA2B,MAAa,CAAEC,aAAc,GAFZJ,sCAKnBK,6BACEC,4CAEA9B,KAAA+B,SAAc,CACZH,aAAc5B,KAAAgC,cACVhC,KAAAgC,cAAAC,eADUC,aAEV,OAIRpC,kBAAS,IAxEXgB,EAwEWqB,EAAAnC,KAAAD,EAIHC,KAJGC,MAEUmB,EAFVrB,EAAAqC,YAAAhB,MAGLV,EAHKX,EAAAW,KAKD2B,EAAoB,CACxBC,kBADwBC,EAAA,EAExBC,iBAFwBD,EAAA,EAGxBE,eAHwBC,EAAA,EAIxBC,mBAEIC,EAAQC,IAAA,GAAQ7C,KAAAC,MAAR6C,MAAdT,GACMU,EAAQF,IAAA,GAAAA,IAAA,GAAa7C,KAAbC,MAA4B,CAAE6C,MAAOF,KAE7CI,EAhDV,WACE,IACE,QAASC,OAAFC,wBAAmCpB,SAA1CqB,aACA,MAAAC,GACA,UA4CgCC,GAEhC,OACEjD,EAAAC,EAAAC,cAAAgD,EAAA,OACElD,EAAAC,EAAAC,cAAA0B,EAAA,EAAAuB,OAAAC,OAAA,CACEC,IAAK,SAAAzB,GAAa,OAAKG,EAAAH,cAALA,IACdhC,KAFNC,OAIEG,EAAAC,EAAAC,cAAAoD,EAAA,YACEtD,EAAAC,EAAAC,cAAA,QAAMqD,QAAQ,UACdvD,EAAAC,EAAAC,cAAA,aAAAc,EANJ,qBAQEhB,EAAAC,EAAAC,cAAAsD,EAAA,OACExD,EAAAC,EAAAC,cAAA,UATJc,IAtCR,SAAAV,GACE,OAAOA,wBAAP,IAAoCW,KAgD3BwC,KACCzD,EAAAC,EAAAC,cAAAwD,EAAA,KACE1D,EAAAC,EAAAC,cAAA,UADFc,GAEG4B,EACC5C,EAAAC,EAAAC,cAAAyD,EAAA,OAAW1C,EADWX,IAGtBN,EAAAC,EAAAC,cAAA0D,EAAA,EAAAjB,EAA4BrC,YALhCuD,MAOGvD,oBAAyBA,mBAAzBA,QACCN,EAAAC,EAAAC,cAAA4D,EAAA,GACEC,OAAQzD,mBADVyD,OAEEvC,aAAc5B,KAAA2B,MAAWC,eAG7BxB,EAAAC,EAAAC,cAAAyD,EAAA,OAAWrD,mBAzBjB0D,cA4BG3D,MACCL,EAAAC,EAAAC,cAAA+D,EAAA,GAAgBC,aAAc1D,EAAiBF,KAEhDC,MACCP,EAAAC,EAAAC,cAAAiE,EAAA,GACEC,gBA3Hd1D,EA2HgDJ,aAADI,MA1H7CA,EAIeA,EAAAC,IAAU,SAAA0D,GAAI,MAAK,CAChCrD,MAAOqD,mBADyBrD,MAEhCF,KAAMuD,cAAiBtD,QALvB,YAsDuBX,aA4EZkE,yBAAfC,2CC/IO,IAAMC,EAAN,aAmEQC,EAAA,iBAAA7D,GAAA,IAAEd,EAAFc,EAAAd,SAAeD,EAAf6E,IAAA9D,EAAA,qBAA0BZ,EAAAC,EAAAC,cAAAyE,EAAA,kBAAkBC,WAAUnC,IAAA,GAAAoC,EAAA,IACnE7E,EAAAC,EAAAC,cAAA4E,EAAAjF,EADaC","file":"component---cache-gatsby-mdx-mdx-wrappers-dir-f-295-b-1-decd-1-d-0-de-173-c-6-bf-399815-be-99-scope-hash-3010-b-3-badc-54-a-9-dfa-4-a-4-c-80-e-419-a-41-b-2-js-3c004b2d9bec90052417.js","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport palette from \"../../utils/palette\"\nimport { TABLET_LANDSCAPE_WIDTH } from \"../../constants\"\n\nconst ContentWrapper = styled.main`\n  background-color: rgba(${palette.rgbContentBackground}, 0.9);\n  box-shadow: 0 0 6.25rem rgba(${palette.rgbContentBackground}, 100);\n  color: ${palette.white};\n  padding: 0 2rem;\n  max-width: 50vw;\n  position: relative;\n  top: 2.5vh;\n\n  align-self: center;\n  & h2 {\n    font-size: 2rem;\n    font-weight: 800;\n    margin-bottom: 0.75rem;\n  }\n\n  & p,\n  li {\n    margin: 1.5rem 0.75rem;\n  }\n\n  @media (max-width: ${TABLET_LANDSCAPE_WIDTH}px) {\n    max-width: 95vw;\n    width: 95vw;\n    padding: 0 0.5rem;\n    margin: 0 0.5rem 0 0.5rem;\n  }\n`\n\nexport default class extends React.Component {\n  render() {\n    const { children, style } = this.props\n    return <ContentWrapper style={style}>{children}</ContentWrapper>\n  }\n}\n","import React, { Component } from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport MDXRenderer from \"gatsby-mdx/mdx-renderer\"\nimport { withMDXScope } from \"gatsby-mdx/context\"\nimport { Helmet } from \"react-helmet\"\n\nimport ContentArea from \"../components/contentArea\"\nimport Navigation from \"../components/secondaryNavigation\"\nimport SiteContainer from \"../components/siteContainer\"\nimport Point from \"../components/point\"\nimport Markdown from \"../components/markdown\"\nimport RelatedContent from \"../components/relatedContent\"\nimport Breakpoints from \"../components/breakpoints\"\nimport { FulcrumImageVideo, FulcrumTextAudio } from \"../components/fulcrum\"\nimport AboutTheAuthor from \"../components/aboutTheAuthor\"\nimport MapNavigation from \"../components/MapNavigation\"\n\n// eslint-disable-next-line\nimport styles from \"../styles/global.css\"\nimport VisuallyHidden from \"../components/visuallyHidden\"\n\nfunction mapLinkProperties(edges) {\n  if (!edges) {\n    return []\n  }\n\n  const output = edges.map(edge => ({\n    title: edge.node.frontmatter.title,\n    href: edge.node.fields.slug,\n  }))\n\n  return output\n}\n\nfunction shouldShowRelatedContent(data) {\n  return (\n    data &&\n    data.siblingPages &&\n    data.siblingPages.edges &&\n    data.siblingPages.edges.length > 0 &&\n    shouldShowChildLinks(data) === false\n  )\n}\n\nfunction mapSiblingContent(data) {\n  if (!shouldShowRelatedContent(data)) {\n    return null\n  }\n\n  return data.siblingPages.edges.map(({ node }) => ({\n    href: node.fields.slug,\n    title: node.frontmatter.title,\n  }))\n}\n\nfunction shouldShowChildLinks(data) {\n  return !!(data.childPages && data.childPages.edges.length > 0)\n}\n\nfunction isIE11() {\n  try {\n    return !!window.MSInputMethodContext && !!document.documentMode\n  } catch (ex) {\n    return false\n  }\n}\n\nfunction getBodyContent(data) {\n  const items = data.post.rawBody.split(\"---\")\n\n  return items.length > 0 ? items[items.length - 1] : \"\"\n}\n\nfunction hasContent(data) {\n  return data.post.wordCount.words || getBodyContent(data) != \"\"\n}\n\nclass ContentPages extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { headerOffset: 0 }\n  }\n\n  componentDidMount() {\n    document.body.classList.remove(\"modalOpen\")\n\n    this.setState({\n      headerOffset: this.siteContainer\n        ? this.siteContainer.headingWrapper.clientHeight\n        : 0,\n    })\n  }\n\n  render() {\n    const {\n      pageContext: { title },\n      data,\n    } = this.props\n    const contextComponents = {\n      FulcrumImageVideo,\n      FulcrumTextAudio,\n      AboutTheAuthor,\n      MapNavigation,\n    }\n    const newScope = { ...this.props.scope, ...contextComponents }\n    const newProps = { ...{ ...this.props, ...{ scope: newScope } } }\n\n    const useMarkdownInsteadOfMDX = isIE11()\n\n    return (\n      <Breakpoints>\n        <SiteContainer\n          ref={siteContainer => (this.siteContainer = siteContainer)}\n          {...this.props}\n        >\n          <Helmet>\n            <meta charSet=\"utf-8\" />\n            <title>{title} | Explore Gabii</title>\n          </Helmet>\n          <VisuallyHidden>\n            <h1>{title}</h1>\n          </VisuallyHidden>\n          {hasContent(data) && (\n            <ContentArea>\n              <h1>{title}</h1>\n              {useMarkdownInsteadOfMDX ? (\n                <Markdown>{getBodyContent(data)}</Markdown>\n              ) : (\n                <MDXRenderer {...newProps}>{data.post.code.body}</MDXRenderer>\n              )}\n              {data.post.frontmatter && data.post.frontmatter.points && (\n                <Point\n                  points={data.post.frontmatter.points}\n                  headerOffset={this.state.headerOffset}\n                />\n              )}\n              <Markdown>{data.post.frontmatter.afterPoints}</Markdown>\n            </ContentArea>\n          )}\n          {shouldShowRelatedContent(data) && (\n            <RelatedContent relatedLinks={mapSiblingContent(data)} />\n          )}\n          {shouldShowChildLinks(data) && (\n            <Navigation\n              linkProperties={mapLinkProperties(data.childPages.edges)}\n            />\n          )}\n        </SiteContainer>\n      </Breakpoints>\n    )\n  }\n}\n\nexport default withMDXScope(ContentPages)\n\nexport const pageQuery = graphql`\n  query($id: String!, $key: String!, $parentKey: String) {\n    post: mdx(id: { eq: $id }) {\n      id\n      rawBody\n      code {\n        body\n      }\n      wordCount {\n        words\n      }\n      frontmatter {\n        title\n        afterPoints\n        points {\n          point\n          title\n        }\n      }\n    }\n    childPages: allMdx(filter: { frontmatter: { parentKey: { eq: $key } } }) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            key\n            parentKey\n          }\n        }\n      }\n    }\n    siblingPages: allMdx(\n      filter: {\n        frontmatter: { parentKey: { eq: $parentKey }, key: { ne: $key } }\n      }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n    allMdx: allMdx {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            key\n            parentKey\n          }\n        }\n      }\n    }\n  }\n`\n","// .cache/gatsby-mdx/wrapper-components/{wrapper-filepath-hash}-{scope-hash}.js\nimport React from 'react';\nimport { MDXScopeProvider } from 'gatsby-mdx/context';\n\nimport __mdxScope_0 from '/Users/scottsanzenbacher/Documents/Projects/Spaceship/exploregabii/.cache/gatsby-mdx/mdx-scopes-dir/3010b3badc54a9dfa4a4c80e419a41b2.js';\n\nimport OriginalWrapper from '/Users/scottsanzenbacher/Documents/Projects/Spaceship/exploregabii/src/templates/content-pages.js';\n\nimport { graphql } from 'gatsby';\n\n// pageQuery, etc get hoisted to here\nexport const pageQuery = graphql`\n  query($id: String!, $key: String!, $parentKey: String) {\n    post: mdx(id: { eq: $id }) {\n      id\n      rawBody\n      code {\n        body\n      }\n      wordCount {\n        words\n      }\n      frontmatter {\n        title\n        afterPoints\n        points {\n          point\n          title\n        }\n      }\n    }\n    childPages: allMdx(filter: { frontmatter: { parentKey: { eq: $key } } }) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            key\n            parentKey\n          }\n        }\n      }\n    }\n    siblingPages: allMdx(\n      filter: {\n        frontmatter: { parentKey: { eq: $parentKey }, key: { ne: $key } }\n      }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n    allMdx: allMdx {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            key\n            parentKey\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default ({children, ...props}) => <MDXScopeProvider __mdxScope={{...__mdxScope_0}}>\n  <OriginalWrapper\n    {...props}\n  >\n    {children}\n  </OriginalWrapper>\n</MDXScopeProvider>"],"sourceRoot":""}