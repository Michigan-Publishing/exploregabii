{"version":3,"sources":["webpack:///./src/components/ContentPage/ContentPage.js","webpack:///./src/templates/content-with-background.js","webpack:///./.cache/gatsby-mdx/mdx-wrappers-dir/da5ac0cb463b37c4f2ca35bd6087c53a--scope-hash-3010b3badc54a9dfa4a4c80e419a41b2.js"],"names":["Container","styled","div","withConfig","displayName","componentId","props","src","Content","_ref","theme","blackTranslucent","_ref2","white","ContentPage","_ref3","imageSrc","children","react_default","a","createElement","shouldShowRelatedContent","data","shouldShowChildLinks","mapSiblingContent","siblingPages","edges","map","node","href","slug","title","getBodyContent","items","ContentWithBackground","_this","_Component","call","this","state","headerOffset","componentDidMount","document","setState","siteContainer","headingWrapper","clientHeight","render","_this2","_this$props","_this$props$pageConte","pageContext","backgroundImage","contextComponents","FulcrumImageVideo","fulcrum","FulcrumTextAudio","AboutTheAuthor","aboutTheAuthor","MapNavigation","newScope","objectSpread_default","scope","newProps","useMarkdownInsteadOfMDX","window","MSInputMethodContext","documentMode","ex","isIE11","breakpoints","Object","assign","ref","Helmet","charSet","visuallyHidden","hasContent","markdown","mdx_renderer","body","point","points","afterPoints","relatedContent","relatedLinks","secondaryNavigation","linkProperties","edge","Component","withMDXScope","content_with_background_ContentWithBackground","pageQuery","__webpack_exports__","objectWithoutPropertiesLoose_default","context","__mdxScope","_3010b3badc54a9dfa4a4c80e419a41b2","content_with_background"],"mappings":"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","file":"component---cache-gatsby-mdx-mdx-wrappers-dir-da-5-ac-0-cb-463-b-37-c-4-f-2-ca-35-bd-6087-c-53-a-scope-hash-3010-b-3-badc-54-a-9-dfa-4-a-4-c-80-e-419-a-41-b-2-js-9265d07f96d9ff6c124f.js","sourcesContent":["import React, { useState } from \"react\"\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\n\nconst Container = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background: center / cover no-repeat url(\"${props => props.src}\");\n  position: relative;\n`\n\nconst Content = styled.div`\n  position: absolute;\n  top: 0;\n  right: 60px;\n  width: 40%;\n  min-width: 400px;\n  background-color: ${({ theme }) => theme.colors.blackTranslucent};\n  color: ${({ theme }) => theme.colors.white};\n  padding: 2rem;\n  line-height: 1.25rem;\n`\n\nexport function ContentPage({ imageSrc, children }) {\n  return (\n    <Container src={imageSrc}>\n      <Content>{children}</Content>\n    </Container>\n  )\n}\n","import React, { Component } from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport MDXRenderer from \"gatsby-mdx/mdx-renderer\"\nimport { withMDXScope } from \"gatsby-mdx/context\"\nimport { Helmet } from \"react-helmet\"\n\nimport { ContentPage } from \"../components/ContentPage\"\nimport ContentArea from \"../components/contentArea\"\nimport Navigation from \"../components/secondaryNavigation\"\nimport SiteContainer from \"../components/siteContainer\"\nimport Point from \"../components/point\"\nimport Markdown from \"../components/markdown\"\nimport RelatedContent from \"../components/relatedContent\"\nimport Breakpoints from \"../components/breakpoints\"\nimport { FulcrumImageVideo, FulcrumTextAudio } from \"../components/fulcrum\"\nimport AboutTheAuthor from \"../components/aboutTheAuthor\"\nimport MapNavigation from \"../components/MapNavigation\"\n\n// eslint-disable-next-line\nimport styles from \"../styles/global.css\"\nimport VisuallyHidden from \"../components/visuallyHidden\"\n\nfunction mapLinkProperties(edges) {\n  if (!edges) {\n    return []\n  }\n\n  const output = edges.map(edge => ({\n    title: edge.node.frontmatter.title,\n    href: edge.node.fields.slug,\n  }))\n\n  return output\n}\n\nfunction shouldShowRelatedContent(data) {\n  return (\n    data &&\n    data.siblingPages &&\n    data.siblingPages.edges &&\n    data.siblingPages.edges.length > 0 &&\n    shouldShowChildLinks(data) === false\n  )\n}\n\nfunction mapSiblingContent(data) {\n  if (!shouldShowRelatedContent(data)) {\n    return null\n  }\n\n  return data.siblingPages.edges.map(({ node }) => ({\n    href: node.fields.slug,\n    title: node.frontmatter.title,\n  }))\n}\n\nfunction shouldShowChildLinks(data) {\n  return !!(data.childPages && data.childPages.edges.length > 0)\n}\n\nfunction isIE11() {\n  try {\n    return !!window.MSInputMethodContext && !!document.documentMode\n  } catch (ex) {\n    return false\n  }\n}\n\nfunction getBodyContent(data) {\n  const items = data.post.rawBody.split(\"---\")\n\n  return items.length > 0 ? items[items.length - 1] : \"\"\n}\n\nfunction hasContent(data) {\n  return data.post.wordCount.words || getBodyContent(data) != \"\"\n}\n\nclass ContentWithBackground extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { headerOffset: 0 }\n  }\n\n  componentDidMount() {\n    document.body.classList.remove(\"modalOpen\")\n\n    this.setState({\n      headerOffset: this.siteContainer\n        ? this.siteContainer.headingWrapper.clientHeight\n        : 0,\n    })\n  }\n\n  render() {\n    const {\n      pageContext: { title, backgroundImage },\n      data,\n    } = this.props\n    const contextComponents = {\n      FulcrumImageVideo,\n      FulcrumTextAudio,\n      AboutTheAuthor,\n      MapNavigation,\n    }\n    const newScope = { ...this.props.scope, ...contextComponents }\n    const newProps = { ...{ ...this.props, ...{ scope: newScope } } }\n\n    const useMarkdownInsteadOfMDX = isIE11()\n\n    return (\n      <Breakpoints>\n        <SiteContainer\n          ref={siteContainer => (this.siteContainer = siteContainer)}\n          {...this.props}\n        >\n          <Helmet>\n            <meta charSet=\"utf-8\" />\n            <title>{title} | Explore Gabii</title>\n          </Helmet>\n          <VisuallyHidden>\n            <h1>{title}</h1>\n          </VisuallyHidden>\n          {hasContent(data) && (\n            <ContentPage imageSrc={backgroundImage}>\n              <h1>{title}</h1>\n              {useMarkdownInsteadOfMDX ? (\n                <Markdown>{getBodyContent(data)}</Markdown>\n              ) : (\n                <MDXRenderer {...newProps}>{data.post.code.body}</MDXRenderer>\n              )}\n              {data.post.frontmatter && data.post.frontmatter.points && (\n                <Point\n                  points={data.post.frontmatter.points}\n                  headerOffset={this.state.headerOffset}\n                />\n              )}\n              <Markdown>{data.post.frontmatter.afterPoints}</Markdown>\n            </ContentPage>\n          )}\n          {shouldShowRelatedContent(data) && (\n            <RelatedContent relatedLinks={mapSiblingContent(data)} />\n          )}\n          {shouldShowChildLinks(data) && (\n            <Navigation\n              linkProperties={mapLinkProperties(data.childPages.edges)}\n            />\n          )}\n        </SiteContainer>\n      </Breakpoints>\n    )\n  }\n}\n\nexport default withMDXScope(ContentWithBackground)\n\nexport const pageQuery = graphql`\n  query($id: String!, $key: String!, $parentKey: String) {\n    post: mdx(id: { eq: $id }) {\n      id\n      rawBody\n      code {\n        body\n      }\n      wordCount {\n        words\n      }\n      frontmatter {\n        title\n        afterPoints\n        points {\n          point\n          title\n        }\n      }\n    }\n    childPages: allMdx(filter: { frontmatter: { parentKey: { eq: $key } } }) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            key\n            parentKey\n          }\n        }\n      }\n    }\n    siblingPages: allMdx(\n      filter: {\n        frontmatter: { parentKey: { eq: $parentKey }, key: { ne: $key } }\n      }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n    allMdx: allMdx {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            key\n            parentKey\n          }\n        }\n      }\n    }\n  }\n`\n","// .cache/gatsby-mdx/wrapper-components/{wrapper-filepath-hash}-{scope-hash}.js\nimport React from 'react';\nimport { MDXScopeProvider } from 'gatsby-mdx/context';\n\nimport __mdxScope_0 from '/Users/scottsanzenbacher/Documents/Projects/Spaceship/exploregabii/.cache/gatsby-mdx/mdx-scopes-dir/3010b3badc54a9dfa4a4c80e419a41b2.js';\n\nimport OriginalWrapper from '/Users/scottsanzenbacher/Documents/Projects/Spaceship/exploregabii/src/templates/content-with-background.js';\n\nimport { graphql } from 'gatsby';\n\n// pageQuery, etc get hoisted to here\nexport const pageQuery = graphql`\n  query($id: String!, $key: String!, $parentKey: String) {\n    post: mdx(id: { eq: $id }) {\n      id\n      rawBody\n      code {\n        body\n      }\n      wordCount {\n        words\n      }\n      frontmatter {\n        title\n        afterPoints\n        points {\n          point\n          title\n        }\n      }\n    }\n    childPages: allMdx(filter: { frontmatter: { parentKey: { eq: $key } } }) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            key\n            parentKey\n          }\n        }\n      }\n    }\n    siblingPages: allMdx(\n      filter: {\n        frontmatter: { parentKey: { eq: $parentKey }, key: { ne: $key } }\n      }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n    allMdx: allMdx {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            key\n            parentKey\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default ({children, ...props}) => <MDXScopeProvider __mdxScope={{...__mdxScope_0}}>\n  <OriginalWrapper\n    {...props}\n  >\n    {children}\n  </OriginalWrapper>\n</MDXScopeProvider>"],"sourceRoot":""}